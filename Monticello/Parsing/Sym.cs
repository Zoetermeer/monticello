using System;

namespace Monticello.Parsing {
    public enum Sym {
        Id,
        IntLiteral,
        HexIntLiteral,
        RealLiteral,
        StringLiteral,
        CharLiteral,
        KwAbstract,
        KwAs,
        KwBase,
        KwBool,
        KwBreak,
        KwByte,
        KwCase,
        KwCatch,
        KwChar,
        KwChecked,
        KwClass,
        KwConst,
        KwContinue,
        KwDecimal,
        KwDefault,
        KwDelegate,
        KwDo,
        KwDouble,
        KwElse,
        KwEnum,
        KwEvent,
        KwExplicit,
        KwExtern,
        KwFalse,
        KwFinally,
        KwFixed,
        KwFloat,
        KwFor,
        KwForeach,
        KwGoto,
        KwIf,
        KwImplicit,
        KwIn,
        KwInt,
        KwInterface,
        KwInternal,
        KwIs,
        KwLock,
        KwLong,
        KwNamespace,
        KwNew,
        KwNull,
        KwObject,
        KwOperator,
        KwOut,
        KwOverride,
        KwParams,
        KwPrivate,
        KwProtected,
        KwPublic,
        KwReadonly,
        KwRef,
        KwReturn,
        KwSbyte,
        KwSealed,
        KwShort,
        KwSizeof,
        KwStackalloc,
        KwStatic,
        KwString,
        KwStruct,
        KwSwitch,
        KwThis,
        KwThrow,
        KwTrue,
        KwTry,
        KwTypeof,
        KwUint,
        KwUlong,
        KwUnchecked,
        KwUnsafe,
        KwUshort,
        KwUsing,
        KwVar,
        KwVirtual,
        KwVoid,
        KwVolatile,
        KwWhile,
        Semicolon,
        AssignEqual,
        EqualEqual,
        NotEqual,
        OpenBrace,
        CloseBrace,
        OpenIndexer,
        CloseIndexer,
        OpenParen,
        CloseParen,
        Dot,
        Comma,
        Colon,
        Plus,
        Minus,
        Mult,
        Div,
        Mod,
        BitwiseAnd,
        BitwiseOr,
        BitwiseXor,
        Not,
        BitwiseNot,
        LessThan,
        GreaterThan,
        QuestionMark,
        PlusPlus,
        MinusMinus,
        BooleanAnd,
        BooleanOr,
        LeftShift,
        RightShift,
        LtEqual,
        GtEqual,
        PlusEqual,
        MinusEqual,
        MultEqual,
        DivEqual,
        ModEqual,
        BitwiseAndEqual,
        BitwiseOrEqual,
        BitwiseXorEqual,
        LeftShiftEqual,
        RightShiftEqual,
        Eof,
        Unknown
    }
}
